@model XnetIT.Models.eng_ratings

@{
    ViewBag.Title = "RateEngineer";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> rating = new List<SelectListItem>();
    rating.Add(new SelectListItem() { Text = "1", Value = "1" });
    rating.Add(new SelectListItem() { Text = "2", Value = "2" });
    rating.Add(new SelectListItem() { Text = "3", Value = "3" });
    rating.Add(new SelectListItem() { Text = "4", Value = "4" });
    rating.Add(new SelectListItem() { Text = "5", Value = "5" });
}

<h2>RateEngineer</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>eng_ratings</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="hideThese">
            <div class="form-group">
                @Html.LabelFor(model => model.u_id, "u_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.u_id, new { htmlAttributes = new { @class = "form-control", @id = "user_id" } })
                    @Html.ValidationMessageFor(model => model.u_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.j_id, "j_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.j_id, new { htmlAttributes = new { @class = "form-control", @id = "job_id" } })
                    @Html.ValidationMessageFor(model => model.j_id, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.rating, rating, "Rate Engineer from 1 to 5", new { @class = "form-control", @id = "ratinOfWork" })
                @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Rate" class="btn btn-default" onclick="return setValues()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>

        var hideItems = document.getElementById("hideThese");
        hideItems.style.display = "none";

        var JOBID = @Request.QueryString["jobId"];
        var USERID = @Request.QueryString["userId"];

        function setValues() {

            var usId = document.getElementById("user_id").value = USERID;
            var jId = document.getElementById("job_id").value = JOBID;

            return true;
        }

    </script>

}

@model XnetIT.Models.job_ratings

@{
    ViewBag.Title = "RateJob";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> rating = new List<SelectListItem>();
    rating.Add(new SelectListItem() { Text = "1", Value = "1" });
    rating.Add(new SelectListItem() { Text = "2", Value = "2" });
    rating.Add(new SelectListItem() { Text = "3", Value = "3" });
    rating.Add(new SelectListItem() { Text = "4", Value = "4" });
    rating.Add(new SelectListItem() { Text = "5", Value = "5" });
}



<h2>RateJob</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "registerationForm", id = "RateForm" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>job_ratings</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div id="hideThis1">
        <div class="form-group">
            @Html.LabelFor(model => model.u_id, "u_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("u_id", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.EditorFor(model => model.u_id, new { htmlAttributes = new { @class = "form-control", @id = "userId" } })

                @Html.ValidationMessageFor(model => model.u_id, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div id="hideThis2">
        <div class="form-group">
            @Html.LabelFor(model => model.j_id, "j_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.j_id, new { htmlAttributes = new { @class = "form-control", @id = "job_id" } })
                @Html.ValidationMessageFor(model => model.j_id, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.rating, rating, "Rate work from 1 to 5", new { @class = "form-control", @id = "ratinOfWork" })
                @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="hideThis3">
            <div class="form-group">
                @Html.LabelFor(model => model.date_and_time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.date_and_time, new { htmlAttributes = new { @class = "form-control", @id = "dateAndTime" } })
                    @Html.ValidationMessageFor(model => model.date_and_time, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" onclick="return setValues()"/>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @*@Scripts.Render("~/bundles/jqueryval")*@

        <script>

            var uId = @HttpContext.Current.Session["UserID"].ToString();
            var jId = @Request.QueryString["jobId"];

            var itemHidden1 = document.getElementById("hideThis1");
            var itemHidden2 = document.getElementById("hideThis2");
            var itemHidden3 = document.getElementById("hideThis3");
            itemHidden1.style.display = "none";
            itemHidden2.style.display = "none";
            itemHidden3.style.display = "none";

            //getting valeus

            function setValues() {

                var usId = document.getElementById("userId").value = uId;
                var date_time = document.getElementById("dateAndTime").value = "";
                var j_id = document.getElementById("job_id").value = jId;

                return true;

            }

        </script>
    }

@model XnetIT.Models.job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> jobStatus = new List<SelectListItem>();
    jobStatus.Add(new SelectListItem() { Text = "Searching", Value = "Searching" });
    jobStatus.Add(new SelectListItem() { Text = "Started", Value = "Started" });
    jobStatus.Add(new SelectListItem() { Text = "Delayed", Value = "Delayed" });
    jobStatus.Add(new SelectListItem() { Text = "Completed", Value = "Completed" });
    jobStatus.Add(new SelectListItem() { Text = "Cancelled", Value = "Cancelled" });
    jobStatus.Add(new SelectListItem() { Text = "Closed", Value = "Closed" });
}

<h2>Edit / Change Job Status</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.job_id)

        <div class="form-group">
            <label class="control-label col-md-2">Title</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Address</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.j_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.j_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.j_date, new { htmlAttributes = new { @class = "form-control", type = "date", @id = "dateOfJob" } })
                @Html.ValidationMessageFor(model => model.j_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Time</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.j_time, new { htmlAttributes = new { @class = "form-control", type = "time", @value = DateTime.Now.ToString("hh:mm tt") } })
                @Html.ValidationMessageFor(model => model.j_time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Site Contact Number</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.site_contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.site_contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Job Status</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.j_status, jobStatus, "Change Job State", new { @class = "form-control", @id = "jobstatus" })
                @Html.ValidationMessageFor(model => model.j_status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Jobs", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script>

        function checkDateAttribute() {
            var dateOfJob = document.getElementById("dateOfJob");

            if (dateOfJob.value == null) {
                dateOfJob.value = Date();
                return true;
            }
            else {
                return true;
            }
        }

    </script>
}
